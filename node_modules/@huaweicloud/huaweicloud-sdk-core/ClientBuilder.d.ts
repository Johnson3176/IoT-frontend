import { HcClient } from "./HcClient";
import { ICredential } from "./auth/ICredential";
import { Region } from "./region/region";
import { UserOptions } from "./UserOptions";
export declare class ClientBuilder<T> {
    private init;
    private endpoints?;
    private credential?;
    private proxyAgent?;
    private credentialType;
    private envParams;
    private region?;
    private userOptions?;
    private credentials;
    constructor(init: (hcClient: HcClient) => T, credentialType?: string);
    withEndpoint(endpoint: string | string[]): ClientBuilder<T>;
    withCredential(credential?: ICredential): ClientBuilder<T>;
    withProxyAgent(proxyAgent: string): ClientBuilder<T>;
    withRegion(region: Region): ClientBuilder<T>;
    withOptions(options: UserOptions): ClientBuilder<T>;
    build(): T;
    /**
     * Get 'HUAWEICLOUD_SDK_TYPE' from environment variables
     * If the variable does not exist, use the first credential type
     * Generate credential entity
     * Assign AK, SK, projectId/domainId from the environment variables
     * If the environment variable is 'GlobalCredentials', assign the domainId
     * @returns ICredential
     */
    private getCredentialFromEnvironment;
    private whichCredential;
    private getInputParamCredential;
}
