"use strict";
/*
 * Copyright 2021 Huawei Technologies Co.,Ltd.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectResult = void 0;
var ProjectResult = /** @class */ (function () {
    function ProjectResult(isDomain, description, links, enabled, id, parentId, domainId, name) {
        this['is_domain'] = isDomain;
        this['description'] = description;
        this['links'] = links;
        this['enabled'] = enabled;
        this['id'] = id;
        this['parent_id'] = parentId;
        this['domain_id'] = domainId;
        this['name'] = name;
    }
    ProjectResult.prototype.withIsDomain = function (isDomain) {
        this['is_domain'] = isDomain;
        return this;
    };
    Object.defineProperty(ProjectResult.prototype, "isDomain", {
        get: function () {
            return this['is_domain'];
        },
        set: function (isDomain) {
            this['is_domain'] = isDomain;
        },
        enumerable: false,
        configurable: true
    });
    ProjectResult.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    ProjectResult.prototype.withLinks = function (links) {
        this['links'] = links;
        return this;
    };
    ProjectResult.prototype.withEnabled = function (enabled) {
        this['enabled'] = enabled;
        return this;
    };
    ProjectResult.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    ProjectResult.prototype.withParentId = function (parentId) {
        this['parent_id'] = parentId;
        return this;
    };
    Object.defineProperty(ProjectResult.prototype, "parentId", {
        get: function () {
            return this['parent_id'];
        },
        set: function (parentId) {
            this['parent_id'] = parentId;
        },
        enumerable: false,
        configurable: true
    });
    ProjectResult.prototype.withDomainId = function (domainId) {
        this['domain_id'] = domainId;
        return this;
    };
    Object.defineProperty(ProjectResult.prototype, "domainId", {
        get: function () {
            return this['domain_id'];
        },
        set: function (domainId) {
            this['domain_id'] = domainId;
        },
        enumerable: false,
        configurable: true
    });
    ProjectResult.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    return ProjectResult;
}());
exports.ProjectResult = ProjectResult;
