"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListRoutingRulesRequest = void 0;
var ListRoutingRulesRequest = /** @class */ (function () {
    function ListRoutingRulesRequest() {
    }
    ListRoutingRulesRequest.prototype.withInstanceId = function (instanceId) {
        this['Instance-Id'] = instanceId;
        return this;
    };
    Object.defineProperty(ListRoutingRulesRequest.prototype, "instanceId", {
        get: function () {
            return this['Instance-Id'];
        },
        set: function (instanceId) {
            this['Instance-Id'] = instanceId;
        },
        enumerable: false,
        configurable: true
    });
    ListRoutingRulesRequest.prototype.withResource = function (resource) {
        this['resource'] = resource;
        return this;
    };
    ListRoutingRulesRequest.prototype.withEvent = function (event) {
        this['event'] = event;
        return this;
    };
    ListRoutingRulesRequest.prototype.withAppType = function (appType) {
        this['app_type'] = appType;
        return this;
    };
    Object.defineProperty(ListRoutingRulesRequest.prototype, "appType", {
        get: function () {
            return this['app_type'];
        },
        set: function (appType) {
            this['app_type'] = appType;
        },
        enumerable: false,
        configurable: true
    });
    ListRoutingRulesRequest.prototype.withAppId = function (appId) {
        this['app_id'] = appId;
        return this;
    };
    Object.defineProperty(ListRoutingRulesRequest.prototype, "appId", {
        get: function () {
            return this['app_id'];
        },
        set: function (appId) {
            this['app_id'] = appId;
        },
        enumerable: false,
        configurable: true
    });
    ListRoutingRulesRequest.prototype.withRuleName = function (ruleName) {
        this['rule_name'] = ruleName;
        return this;
    };
    Object.defineProperty(ListRoutingRulesRequest.prototype, "ruleName", {
        get: function () {
            return this['rule_name'];
        },
        set: function (ruleName) {
            this['rule_name'] = ruleName;
        },
        enumerable: false,
        configurable: true
    });
    ListRoutingRulesRequest.prototype.withActive = function (active) {
        this['active'] = active;
        return this;
    };
    ListRoutingRulesRequest.prototype.withLimit = function (limit) {
        this['limit'] = limit;
        return this;
    };
    ListRoutingRulesRequest.prototype.withMarker = function (marker) {
        this['marker'] = marker;
        return this;
    };
    ListRoutingRulesRequest.prototype.withOffset = function (offset) {
        this['offset'] = offset;
        return this;
    };
    return ListRoutingRulesRequest;
}());
exports.ListRoutingRulesRequest = ListRoutingRulesRequest;
