"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpForwarding = void 0;
var HttpForwarding = /** @class */ (function () {
    function HttpForwarding(url) {
        this['url'] = url;
    }
    HttpForwarding.prototype.withUrl = function (url) {
        this['url'] = url;
        return this;
    };
    HttpForwarding.prototype.withCertId = function (certId) {
        this['cert_id'] = certId;
        return this;
    };
    Object.defineProperty(HttpForwarding.prototype, "certId", {
        get: function () {
            return this['cert_id'];
        },
        set: function (certId) {
            this['cert_id'] = certId;
        },
        enumerable: false,
        configurable: true
    });
    HttpForwarding.prototype.withCnName = function (cnName) {
        this['cn_name'] = cnName;
        return this;
    };
    Object.defineProperty(HttpForwarding.prototype, "cnName", {
        get: function () {
            return this['cn_name'];
        },
        set: function (cnName) {
            this['cn_name'] = cnName;
        },
        enumerable: false,
        configurable: true
    });
    HttpForwarding.prototype.withSniEnable = function (sniEnable) {
        this['sni_enable'] = sniEnable;
        return this;
    };
    Object.defineProperty(HttpForwarding.prototype, "sniEnable", {
        get: function () {
            return this['sni_enable'];
        },
        set: function (sniEnable) {
            this['sni_enable'] = sniEnable;
        },
        enumerable: false,
        configurable: true
    });
    HttpForwarding.prototype.withSignatureEnable = function (signatureEnable) {
        this['signature_enable'] = signatureEnable;
        return this;
    };
    Object.defineProperty(HttpForwarding.prototype, "signatureEnable", {
        get: function () {
            return this['signature_enable'];
        },
        set: function (signatureEnable) {
            this['signature_enable'] = signatureEnable;
        },
        enumerable: false,
        configurable: true
    });
    HttpForwarding.prototype.withToken = function (token) {
        this['token'] = token;
        return this;
    };
    return HttpForwarding;
}());
exports.HttpForwarding = HttpForwarding;
