"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddCertificateResponse = void 0;
var SdkResponse_1 = require("@huaweicloud/huaweicloud-sdk-core/SdkResponse");
var AddCertificateResponse = /** @class */ (function (_super) {
    __extends(AddCertificateResponse, _super);
    function AddCertificateResponse() {
        return _super.call(this) || this;
    }
    AddCertificateResponse.prototype.withCertificateId = function (certificateId) {
        this['certificate_id'] = certificateId;
        return this;
    };
    Object.defineProperty(AddCertificateResponse.prototype, "certificateId", {
        get: function () {
            return this['certificate_id'];
        },
        set: function (certificateId) {
            this['certificate_id'] = certificateId;
        },
        enumerable: false,
        configurable: true
    });
    AddCertificateResponse.prototype.withCnName = function (cnName) {
        this['cn_name'] = cnName;
        return this;
    };
    Object.defineProperty(AddCertificateResponse.prototype, "cnName", {
        get: function () {
            return this['cn_name'];
        },
        set: function (cnName) {
            this['cn_name'] = cnName;
        },
        enumerable: false,
        configurable: true
    });
    AddCertificateResponse.prototype.withOwner = function (owner) {
        this['owner'] = owner;
        return this;
    };
    AddCertificateResponse.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    AddCertificateResponse.prototype.withVerifyCode = function (verifyCode) {
        this['verify_code'] = verifyCode;
        return this;
    };
    Object.defineProperty(AddCertificateResponse.prototype, "verifyCode", {
        get: function () {
            return this['verify_code'];
        },
        set: function (verifyCode) {
            this['verify_code'] = verifyCode;
        },
        enumerable: false,
        configurable: true
    });
    AddCertificateResponse.prototype.withCreateDate = function (createDate) {
        this['create_date'] = createDate;
        return this;
    };
    Object.defineProperty(AddCertificateResponse.prototype, "createDate", {
        get: function () {
            return this['create_date'];
        },
        set: function (createDate) {
            this['create_date'] = createDate;
        },
        enumerable: false,
        configurable: true
    });
    AddCertificateResponse.prototype.withEffectiveDate = function (effectiveDate) {
        this['effective_date'] = effectiveDate;
        return this;
    };
    Object.defineProperty(AddCertificateResponse.prototype, "effectiveDate", {
        get: function () {
            return this['effective_date'];
        },
        set: function (effectiveDate) {
            this['effective_date'] = effectiveDate;
        },
        enumerable: false,
        configurable: true
    });
    AddCertificateResponse.prototype.withExpiryDate = function (expiryDate) {
        this['expiry_date'] = expiryDate;
        return this;
    };
    Object.defineProperty(AddCertificateResponse.prototype, "expiryDate", {
        get: function () {
            return this['expiry_date'];
        },
        set: function (expiryDate) {
            this['expiry_date'] = expiryDate;
        },
        enumerable: false,
        configurable: true
    });
    return AddCertificateResponse;
}(SdkResponse_1.SdkResponse));
exports.AddCertificateResponse = AddCertificateResponse;
