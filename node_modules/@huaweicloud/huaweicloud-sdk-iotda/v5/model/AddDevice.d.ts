import { AuthInfo } from './AuthInfo';
import { InitialDesired } from './InitialDesired';
export declare class AddDevice {
    private 'device_id'?;
    private 'node_id';
    private 'device_name'?;
    private 'product_id';
    private 'auth_info'?;
    description?: string;
    private 'gateway_id'?;
    private 'app_id'?;
    private 'extension_info'?;
    shadow?: Array<InitialDesired>;
    constructor(nodeId?: any, productId?: any);
    withDeviceId(deviceId: string): AddDevice;
    set deviceId(deviceId: string | undefined);
    get deviceId(): string | undefined;
    withNodeId(nodeId: string): AddDevice;
    set nodeId(nodeId: string | undefined);
    get nodeId(): string | undefined;
    withDeviceName(deviceName: string): AddDevice;
    set deviceName(deviceName: string | undefined);
    get deviceName(): string | undefined;
    withProductId(productId: string): AddDevice;
    set productId(productId: string | undefined);
    get productId(): string | undefined;
    withAuthInfo(authInfo: AuthInfo): AddDevice;
    set authInfo(authInfo: AuthInfo | undefined);
    get authInfo(): AuthInfo | undefined;
    withDescription(description: string): AddDevice;
    withGatewayId(gatewayId: string): AddDevice;
    set gatewayId(gatewayId: string | undefined);
    get gatewayId(): string | undefined;
    withAppId(appId: string): AddDevice;
    set appId(appId: string | undefined);
    get appId(): string | undefined;
    withExtensionInfo(extensionInfo: object): AddDevice;
    set extensionInfo(extensionInfo: object | undefined);
    get extensionInfo(): object | undefined;
    withShadow(shadow: Array<InitialDesired>): AddDevice;
}
