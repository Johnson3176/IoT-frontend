"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListCertificatesRequest = void 0;
var ListCertificatesRequest = /** @class */ (function () {
    function ListCertificatesRequest() {
    }
    ListCertificatesRequest.prototype.withSpAuthToken = function (spAuthToken) {
        this['Sp-Auth-Token'] = spAuthToken;
        return this;
    };
    Object.defineProperty(ListCertificatesRequest.prototype, "spAuthToken", {
        get: function () {
            return this['Sp-Auth-Token'];
        },
        set: function (spAuthToken) {
            this['Sp-Auth-Token'] = spAuthToken;
        },
        enumerable: false,
        configurable: true
    });
    ListCertificatesRequest.prototype.withStageAuthToken = function (stageAuthToken) {
        this['Stage-Auth-Token'] = stageAuthToken;
        return this;
    };
    Object.defineProperty(ListCertificatesRequest.prototype, "stageAuthToken", {
        get: function () {
            return this['Stage-Auth-Token'];
        },
        set: function (stageAuthToken) {
            this['Stage-Auth-Token'] = stageAuthToken;
        },
        enumerable: false,
        configurable: true
    });
    ListCertificatesRequest.prototype.withInstanceId = function (instanceId) {
        this['Instance-Id'] = instanceId;
        return this;
    };
    Object.defineProperty(ListCertificatesRequest.prototype, "instanceId", {
        get: function () {
            return this['Instance-Id'];
        },
        set: function (instanceId) {
            this['Instance-Id'] = instanceId;
        },
        enumerable: false,
        configurable: true
    });
    ListCertificatesRequest.prototype.withAppId = function (appId) {
        this['app_id'] = appId;
        return this;
    };
    Object.defineProperty(ListCertificatesRequest.prototype, "appId", {
        get: function () {
            return this['app_id'];
        },
        set: function (appId) {
            this['app_id'] = appId;
        },
        enumerable: false,
        configurable: true
    });
    ListCertificatesRequest.prototype.withLimit = function (limit) {
        this['limit'] = limit;
        return this;
    };
    ListCertificatesRequest.prototype.withMarker = function (marker) {
        this['marker'] = marker;
        return this;
    };
    ListCertificatesRequest.prototype.withOffset = function (offset) {
        this['offset'] = offset;
        return this;
    };
    return ListCertificatesRequest;
}());
exports.ListCertificatesRequest = ListCertificatesRequest;
