"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShowDeviceMessageResponse = void 0;
var SdkResponse_1 = require("@huaweicloud/huaweicloud-sdk-core/SdkResponse");
var ShowDeviceMessageResponse = /** @class */ (function (_super) {
    __extends(ShowDeviceMessageResponse, _super);
    function ShowDeviceMessageResponse() {
        return _super.call(this) || this;
    }
    ShowDeviceMessageResponse.prototype.withMessageId = function (messageId) {
        this['message_id'] = messageId;
        return this;
    };
    Object.defineProperty(ShowDeviceMessageResponse.prototype, "messageId", {
        get: function () {
            return this['message_id'];
        },
        set: function (messageId) {
            this['message_id'] = messageId;
        },
        enumerable: false,
        configurable: true
    });
    ShowDeviceMessageResponse.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    ShowDeviceMessageResponse.prototype.withMessage = function (message) {
        this['message'] = message;
        return this;
    };
    ShowDeviceMessageResponse.prototype.withEncoding = function (encoding) {
        this['encoding'] = encoding;
        return this;
    };
    ShowDeviceMessageResponse.prototype.withPayloadFormat = function (payloadFormat) {
        this['payload_format'] = payloadFormat;
        return this;
    };
    Object.defineProperty(ShowDeviceMessageResponse.prototype, "payloadFormat", {
        get: function () {
            return this['payload_format'];
        },
        set: function (payloadFormat) {
            this['payload_format'] = payloadFormat;
        },
        enumerable: false,
        configurable: true
    });
    ShowDeviceMessageResponse.prototype.withTopic = function (topic) {
        this['topic'] = topic;
        return this;
    };
    ShowDeviceMessageResponse.prototype.withProperties = function (properties) {
        this['properties'] = properties;
        return this;
    };
    ShowDeviceMessageResponse.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    ShowDeviceMessageResponse.prototype.withErrorInfo = function (errorInfo) {
        this['error_info'] = errorInfo;
        return this;
    };
    Object.defineProperty(ShowDeviceMessageResponse.prototype, "errorInfo", {
        get: function () {
            return this['error_info'];
        },
        set: function (errorInfo) {
            this['error_info'] = errorInfo;
        },
        enumerable: false,
        configurable: true
    });
    ShowDeviceMessageResponse.prototype.withCreatedTime = function (createdTime) {
        this['created_time'] = createdTime;
        return this;
    };
    Object.defineProperty(ShowDeviceMessageResponse.prototype, "createdTime", {
        get: function () {
            return this['created_time'];
        },
        set: function (createdTime) {
            this['created_time'] = createdTime;
        },
        enumerable: false,
        configurable: true
    });
    ShowDeviceMessageResponse.prototype.withFinishedTime = function (finishedTime) {
        this['finished_time'] = finishedTime;
        return this;
    };
    Object.defineProperty(ShowDeviceMessageResponse.prototype, "finishedTime", {
        get: function () {
            return this['finished_time'];
        },
        set: function (finishedTime) {
            this['finished_time'] = finishedTime;
        },
        enumerable: false,
        configurable: true
    });
    return ShowDeviceMessageResponse;
}(SdkResponse_1.SdkResponse));
exports.ShowDeviceMessageResponse = ShowDeviceMessageResponse;
