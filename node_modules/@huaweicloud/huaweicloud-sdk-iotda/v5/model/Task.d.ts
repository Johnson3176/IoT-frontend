import { TaskPolicy } from './TaskPolicy';
import { TaskProgress } from './TaskProgress';
export declare class Task {
    private 'task_id'?;
    private 'task_name'?;
    private 'task_type'?;
    targets?: Array<string>;
    private 'targets_filter'?;
    document?: object;
    private 'task_policy'?;
    status?: string;
    private 'status_desc'?;
    private 'task_progress'?;
    private 'create_time'?;
    constructor();
    withTaskId(taskId: string): Task;
    set taskId(taskId: string | undefined);
    get taskId(): string | undefined;
    withTaskName(taskName: string): Task;
    set taskName(taskName: string | undefined);
    get taskName(): string | undefined;
    withTaskType(taskType: string): Task;
    set taskType(taskType: string | undefined);
    get taskType(): string | undefined;
    withTargets(targets: Array<string>): Task;
    withTargetsFilter(targetsFilter: {
        [key: string]: object;
    }): Task;
    set targetsFilter(targetsFilter: {
        [key: string]: object;
    } | undefined);
    get targetsFilter(): {
        [key: string]: object;
    } | undefined;
    withDocument(document: object): Task;
    withTaskPolicy(taskPolicy: TaskPolicy): Task;
    set taskPolicy(taskPolicy: TaskPolicy | undefined);
    get taskPolicy(): TaskPolicy | undefined;
    withStatus(status: string): Task;
    withStatusDesc(statusDesc: string): Task;
    set statusDesc(statusDesc: string | undefined);
    get statusDesc(): string | undefined;
    withTaskProgress(taskProgress: TaskProgress): Task;
    set taskProgress(taskProgress: TaskProgress | undefined);
    get taskProgress(): TaskProgress | undefined;
    withCreateTime(createTime: string): Task;
    set createTime(createTime: string | undefined);
    get createTime(): string | undefined;
}
