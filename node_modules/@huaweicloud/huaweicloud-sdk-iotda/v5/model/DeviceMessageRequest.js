"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeviceMessageRequest = void 0;
var DeviceMessageRequest = /** @class */ (function () {
    function DeviceMessageRequest(message) {
        this['message'] = message;
    }
    DeviceMessageRequest.prototype.withMessageId = function (messageId) {
        this['message_id'] = messageId;
        return this;
    };
    Object.defineProperty(DeviceMessageRequest.prototype, "messageId", {
        get: function () {
            return this['message_id'];
        },
        set: function (messageId) {
            this['message_id'] = messageId;
        },
        enumerable: false,
        configurable: true
    });
    DeviceMessageRequest.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    DeviceMessageRequest.prototype.withMessage = function (message) {
        this['message'] = message;
        return this;
    };
    DeviceMessageRequest.prototype.withProperties = function (properties) {
        this['properties'] = properties;
        return this;
    };
    DeviceMessageRequest.prototype.withEncoding = function (encoding) {
        this['encoding'] = encoding;
        return this;
    };
    DeviceMessageRequest.prototype.withPayloadFormat = function (payloadFormat) {
        this['payload_format'] = payloadFormat;
        return this;
    };
    Object.defineProperty(DeviceMessageRequest.prototype, "payloadFormat", {
        get: function () {
            return this['payload_format'];
        },
        set: function (payloadFormat) {
            this['payload_format'] = payloadFormat;
        },
        enumerable: false,
        configurable: true
    });
    DeviceMessageRequest.prototype.withTopic = function (topic) {
        this['topic'] = topic;
        return this;
    };
    DeviceMessageRequest.prototype.withTopicFullName = function (topicFullName) {
        this['topic_full_name'] = topicFullName;
        return this;
    };
    Object.defineProperty(DeviceMessageRequest.prototype, "topicFullName", {
        get: function () {
            return this['topic_full_name'];
        },
        set: function (topicFullName) {
            this['topic_full_name'] = topicFullName;
        },
        enumerable: false,
        configurable: true
    });
    DeviceMessageRequest.prototype.withTtl = function (ttl) {
        this['ttl'] = ttl;
        return this;
    };
    return DeviceMessageRequest;
}());
exports.DeviceMessageRequest = DeviceMessageRequest;
