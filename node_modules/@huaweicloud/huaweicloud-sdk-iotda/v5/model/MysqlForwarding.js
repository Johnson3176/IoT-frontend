"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MysqlForwarding = void 0;
var MysqlForwarding = /** @class */ (function () {
    function MysqlForwarding(address, dbName, username, password, tableName, columnMappings) {
        this['address'] = address;
        this['db_name'] = dbName;
        this['username'] = username;
        this['password'] = password;
        this['table_name'] = tableName;
        this['column_mappings'] = columnMappings;
    }
    MysqlForwarding.prototype.withAddress = function (address) {
        this['address'] = address;
        return this;
    };
    MysqlForwarding.prototype.withDbName = function (dbName) {
        this['db_name'] = dbName;
        return this;
    };
    Object.defineProperty(MysqlForwarding.prototype, "dbName", {
        get: function () {
            return this['db_name'];
        },
        set: function (dbName) {
            this['db_name'] = dbName;
        },
        enumerable: false,
        configurable: true
    });
    MysqlForwarding.prototype.withUsername = function (username) {
        this['username'] = username;
        return this;
    };
    MysqlForwarding.prototype.withPassword = function (password) {
        this['password'] = password;
        return this;
    };
    MysqlForwarding.prototype.withEnableSsl = function (enableSsl) {
        this['enable_ssl'] = enableSsl;
        return this;
    };
    Object.defineProperty(MysqlForwarding.prototype, "enableSsl", {
        get: function () {
            return this['enable_ssl'];
        },
        set: function (enableSsl) {
            this['enable_ssl'] = enableSsl;
        },
        enumerable: false,
        configurable: true
    });
    MysqlForwarding.prototype.withTableName = function (tableName) {
        this['table_name'] = tableName;
        return this;
    };
    Object.defineProperty(MysqlForwarding.prototype, "tableName", {
        get: function () {
            return this['table_name'];
        },
        set: function (tableName) {
            this['table_name'] = tableName;
        },
        enumerable: false,
        configurable: true
    });
    MysqlForwarding.prototype.withColumnMappings = function (columnMappings) {
        this['column_mappings'] = columnMappings;
        return this;
    };
    Object.defineProperty(MysqlForwarding.prototype, "columnMappings", {
        get: function () {
            return this['column_mappings'];
        },
        set: function (columnMappings) {
            this['column_mappings'] = columnMappings;
        },
        enumerable: false,
        configurable: true
    });
    return MysqlForwarding;
}());
exports.MysqlForwarding = MysqlForwarding;
