"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cmd = void 0;
var Cmd = /** @class */ (function () {
    function Cmd(commandName, commandBody, serviceId) {
        this['command_name'] = commandName;
        this['command_body'] = commandBody;
        this['service_id'] = serviceId;
    }
    Cmd.prototype.withCommandName = function (commandName) {
        this['command_name'] = commandName;
        return this;
    };
    Object.defineProperty(Cmd.prototype, "commandName", {
        get: function () {
            return this['command_name'];
        },
        set: function (commandName) {
            this['command_name'] = commandName;
        },
        enumerable: false,
        configurable: true
    });
    Cmd.prototype.withCommandBody = function (commandBody) {
        this['command_body'] = commandBody;
        return this;
    };
    Object.defineProperty(Cmd.prototype, "commandBody", {
        get: function () {
            return this['command_body'];
        },
        set: function (commandBody) {
            this['command_body'] = commandBody;
        },
        enumerable: false,
        configurable: true
    });
    Cmd.prototype.withServiceId = function (serviceId) {
        this['service_id'] = serviceId;
        return this;
    };
    Object.defineProperty(Cmd.prototype, "serviceId", {
        get: function () {
            return this['service_id'];
        },
        set: function (serviceId) {
            this['service_id'] = serviceId;
        },
        enumerable: false,
        configurable: true
    });
    Cmd.prototype.withBufferTimeout = function (bufferTimeout) {
        this['buffer_timeout'] = bufferTimeout;
        return this;
    };
    Object.defineProperty(Cmd.prototype, "bufferTimeout", {
        get: function () {
            return this['buffer_timeout'];
        },
        set: function (bufferTimeout) {
            this['buffer_timeout'] = bufferTimeout;
        },
        enumerable: false,
        configurable: true
    });
    Cmd.prototype.withResponseTimeout = function (responseTimeout) {
        this['response_timeout'] = responseTimeout;
        return this;
    };
    Object.defineProperty(Cmd.prototype, "responseTimeout", {
        get: function () {
            return this['response_timeout'];
        },
        set: function (responseTimeout) {
            this['response_timeout'] = responseTimeout;
        },
        enumerable: false,
        configurable: true
    });
    Cmd.prototype.withMode = function (mode) {
        this['mode'] = mode;
        return this;
    };
    return Cmd;
}());
exports.Cmd = Cmd;
