"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubNetworkInterface = void 0;
var SubNetworkInterface = /** @class */ (function () {
    function SubNetworkInterface(id, virsubnetId, privateIpAddress, ipv6IpAddress, macAddress, parentDeviceId, parentId, description, vpcId, vlanId, securityGroups, tags, projectId, createdAt) {
        this['id'] = id;
        this['virsubnet_id'] = virsubnetId;
        this['private_ip_address'] = privateIpAddress;
        this['ipv6_ip_address'] = ipv6IpAddress;
        this['mac_address'] = macAddress;
        this['parent_device_id'] = parentDeviceId;
        this['parent_id'] = parentId;
        this['description'] = description;
        this['vpc_id'] = vpcId;
        this['vlan_id'] = vlanId;
        this['security_groups'] = securityGroups;
        this['tags'] = tags;
        this['project_id'] = projectId;
        this['created_at'] = createdAt;
    }
    SubNetworkInterface.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    SubNetworkInterface.prototype.withVirsubnetId = function (virsubnetId) {
        this['virsubnet_id'] = virsubnetId;
        return this;
    };
    Object.defineProperty(SubNetworkInterface.prototype, "virsubnetId", {
        get: function () {
            return this['virsubnet_id'];
        },
        set: function (virsubnetId) {
            this['virsubnet_id'] = virsubnetId;
        },
        enumerable: false,
        configurable: true
    });
    SubNetworkInterface.prototype.withPrivateIpAddress = function (privateIpAddress) {
        this['private_ip_address'] = privateIpAddress;
        return this;
    };
    Object.defineProperty(SubNetworkInterface.prototype, "privateIpAddress", {
        get: function () {
            return this['private_ip_address'];
        },
        set: function (privateIpAddress) {
            this['private_ip_address'] = privateIpAddress;
        },
        enumerable: false,
        configurable: true
    });
    SubNetworkInterface.prototype.withIpv6IpAddress = function (ipv6IpAddress) {
        this['ipv6_ip_address'] = ipv6IpAddress;
        return this;
    };
    Object.defineProperty(SubNetworkInterface.prototype, "ipv6IpAddress", {
        get: function () {
            return this['ipv6_ip_address'];
        },
        set: function (ipv6IpAddress) {
            this['ipv6_ip_address'] = ipv6IpAddress;
        },
        enumerable: false,
        configurable: true
    });
    SubNetworkInterface.prototype.withMacAddress = function (macAddress) {
        this['mac_address'] = macAddress;
        return this;
    };
    Object.defineProperty(SubNetworkInterface.prototype, "macAddress", {
        get: function () {
            return this['mac_address'];
        },
        set: function (macAddress) {
            this['mac_address'] = macAddress;
        },
        enumerable: false,
        configurable: true
    });
    SubNetworkInterface.prototype.withParentDeviceId = function (parentDeviceId) {
        this['parent_device_id'] = parentDeviceId;
        return this;
    };
    Object.defineProperty(SubNetworkInterface.prototype, "parentDeviceId", {
        get: function () {
            return this['parent_device_id'];
        },
        set: function (parentDeviceId) {
            this['parent_device_id'] = parentDeviceId;
        },
        enumerable: false,
        configurable: true
    });
    SubNetworkInterface.prototype.withParentId = function (parentId) {
        this['parent_id'] = parentId;
        return this;
    };
    Object.defineProperty(SubNetworkInterface.prototype, "parentId", {
        get: function () {
            return this['parent_id'];
        },
        set: function (parentId) {
            this['parent_id'] = parentId;
        },
        enumerable: false,
        configurable: true
    });
    SubNetworkInterface.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    SubNetworkInterface.prototype.withVpcId = function (vpcId) {
        this['vpc_id'] = vpcId;
        return this;
    };
    Object.defineProperty(SubNetworkInterface.prototype, "vpcId", {
        get: function () {
            return this['vpc_id'];
        },
        set: function (vpcId) {
            this['vpc_id'] = vpcId;
        },
        enumerable: false,
        configurable: true
    });
    SubNetworkInterface.prototype.withVlanId = function (vlanId) {
        this['vlan_id'] = vlanId;
        return this;
    };
    Object.defineProperty(SubNetworkInterface.prototype, "vlanId", {
        get: function () {
            return this['vlan_id'];
        },
        set: function (vlanId) {
            this['vlan_id'] = vlanId;
        },
        enumerable: false,
        configurable: true
    });
    SubNetworkInterface.prototype.withSecurityGroups = function (securityGroups) {
        this['security_groups'] = securityGroups;
        return this;
    };
    Object.defineProperty(SubNetworkInterface.prototype, "securityGroups", {
        get: function () {
            return this['security_groups'];
        },
        set: function (securityGroups) {
            this['security_groups'] = securityGroups;
        },
        enumerable: false,
        configurable: true
    });
    SubNetworkInterface.prototype.withTags = function (tags) {
        this['tags'] = tags;
        return this;
    };
    SubNetworkInterface.prototype.withProjectId = function (projectId) {
        this['project_id'] = projectId;
        return this;
    };
    Object.defineProperty(SubNetworkInterface.prototype, "projectId", {
        get: function () {
            return this['project_id'];
        },
        set: function (projectId) {
            this['project_id'] = projectId;
        },
        enumerable: false,
        configurable: true
    });
    SubNetworkInterface.prototype.withCreatedAt = function (createdAt) {
        this['created_at'] = createdAt;
        return this;
    };
    Object.defineProperty(SubNetworkInterface.prototype, "createdAt", {
        get: function () {
            return this['created_at'];
        },
        set: function (createdAt) {
            this['created_at'] = createdAt;
        },
        enumerable: false,
        configurable: true
    });
    return SubNetworkInterface;
}());
exports.SubNetworkInterface = SubNetworkInterface;
