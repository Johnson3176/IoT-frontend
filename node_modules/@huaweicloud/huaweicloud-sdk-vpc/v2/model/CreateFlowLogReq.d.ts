export declare class CreateFlowLogReq {
    name?: string;
    description?: string;
    private 'resource_type';
    private 'resource_id';
    private 'traffic_type';
    private 'log_group_id';
    private 'log_topic_id';
    private 'index_enabled'?;
    constructor(resourceType?: any, resourceId?: any, trafficType?: any, logGroupId?: any, logTopicId?: any);
    withName(name: string): CreateFlowLogReq;
    withDescription(description: string): CreateFlowLogReq;
    withResourceType(resourceType: CreateFlowLogReqResourceTypeEnum): CreateFlowLogReq;
    set resourceType(resourceType: CreateFlowLogReqResourceTypeEnum | undefined);
    get resourceType(): CreateFlowLogReqResourceTypeEnum | undefined;
    withResourceId(resourceId: string): CreateFlowLogReq;
    set resourceId(resourceId: string | undefined);
    get resourceId(): string | undefined;
    withTrafficType(trafficType: CreateFlowLogReqTrafficTypeEnum): CreateFlowLogReq;
    set trafficType(trafficType: CreateFlowLogReqTrafficTypeEnum | undefined);
    get trafficType(): CreateFlowLogReqTrafficTypeEnum | undefined;
    withLogGroupId(logGroupId: string): CreateFlowLogReq;
    set logGroupId(logGroupId: string | undefined);
    get logGroupId(): string | undefined;
    withLogTopicId(logTopicId: string): CreateFlowLogReq;
    set logTopicId(logTopicId: string | undefined);
    get logTopicId(): string | undefined;
    withIndexEnabled(indexEnabled: boolean): CreateFlowLogReq;
    set indexEnabled(indexEnabled: boolean | undefined);
    get indexEnabled(): boolean | undefined;
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateFlowLogReqResourceTypeEnum {
    PORT = "port",
    NETWORK = "network",
    VPC = "vpc"
}
/**
    * @export
    * @enum {string}
    */
export declare enum CreateFlowLogReqTrafficTypeEnum {
    ALL = "all",
    ACCEPT = "accept",
    REJECT = "reject"
}
