export declare class ListPortsRequest {
    name?: string;
    id?: string;
    limit?: number;
    private 'admin_state_up'?;
    private 'network_id'?;
    private 'mac_address'?;
    private 'device_id'?;
    private 'device_owner'?;
    status?: ListPortsRequestStatusEnum;
    private 'security_groups'?;
    marker?: string;
    private 'fixed_ips'?;
    private 'enterprise_project_id'?;
    constructor();
    withName(name: string): ListPortsRequest;
    withId(id: string): ListPortsRequest;
    withLimit(limit: number): ListPortsRequest;
    withAdminStateUp(adminStateUp: boolean): ListPortsRequest;
    set adminStateUp(adminStateUp: boolean | undefined);
    get adminStateUp(): boolean | undefined;
    withNetworkId(networkId: string): ListPortsRequest;
    set networkId(networkId: string | undefined);
    get networkId(): string | undefined;
    withMacAddress(macAddress: string): ListPortsRequest;
    set macAddress(macAddress: string | undefined);
    get macAddress(): string | undefined;
    withDeviceId(deviceId: string): ListPortsRequest;
    set deviceId(deviceId: string | undefined);
    get deviceId(): string | undefined;
    withDeviceOwner(deviceOwner: ListPortsRequestDeviceOwnerEnum): ListPortsRequest;
    set deviceOwner(deviceOwner: ListPortsRequestDeviceOwnerEnum | undefined);
    get deviceOwner(): ListPortsRequestDeviceOwnerEnum | undefined;
    withStatus(status: ListPortsRequestStatusEnum): ListPortsRequest;
    withSecurityGroups(securityGroups: Array<string>): ListPortsRequest;
    set securityGroups(securityGroups: Array<string> | undefined);
    get securityGroups(): Array<string> | undefined;
    withMarker(marker: string): ListPortsRequest;
    withFixedIps(fixedIps: Array<string>): ListPortsRequest;
    set fixedIps(fixedIps: Array<string> | undefined);
    get fixedIps(): Array<string> | undefined;
    withEnterpriseProjectId(enterpriseProjectId: string): ListPortsRequest;
    set enterpriseProjectId(enterpriseProjectId: string | undefined);
    get enterpriseProjectId(): string | undefined;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListPortsRequestDeviceOwnerEnum {
    NETWORKDHCP = "network:dhcp",
    NEUTRONVIP_PORT = "neutron:VIP_PORT",
    NETWORKROUTER_INTERFACE_DISTRIBUTED = "network:router_interface_distributed",
    NETWORKROUTER_CENTRALIZED_SNAT = "network:router_centralized_snat"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListPortsRequestStatusEnum {
    ACTIVE = "ACTIVE",
    BUILD = "BUILD",
    DOWN = "DOWN"
}
