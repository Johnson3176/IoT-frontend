import { AllowedAddressPair } from './AllowedAddressPair';
import { ExtraDhcpOpt } from './ExtraDhcpOpt';
import { FixedIp } from './FixedIp';
export declare class CreatePortOption {
    name?: string;
    private 'network_id';
    private 'fixed_ips'?;
    private 'device_owner'?;
    private 'security_groups'?;
    private 'admin_state_up'?;
    private 'allowed_address_pairs'?;
    private 'extra_dhcp_opts'?;
    private 'tenant_id'?;
    constructor(networkId?: any);
    withName(name: string): CreatePortOption;
    withNetworkId(networkId: string): CreatePortOption;
    set networkId(networkId: string | undefined);
    get networkId(): string | undefined;
    withFixedIps(fixedIps: Array<FixedIp>): CreatePortOption;
    set fixedIps(fixedIps: Array<FixedIp> | undefined);
    get fixedIps(): Array<FixedIp> | undefined;
    withDeviceOwner(deviceOwner: string): CreatePortOption;
    set deviceOwner(deviceOwner: string | undefined);
    get deviceOwner(): string | undefined;
    withSecurityGroups(securityGroups: Array<string>): CreatePortOption;
    set securityGroups(securityGroups: Array<string> | undefined);
    get securityGroups(): Array<string> | undefined;
    withAdminStateUp(adminStateUp: boolean): CreatePortOption;
    set adminStateUp(adminStateUp: boolean | undefined);
    get adminStateUp(): boolean | undefined;
    withAllowedAddressPairs(allowedAddressPairs: Array<AllowedAddressPair>): CreatePortOption;
    set allowedAddressPairs(allowedAddressPairs: Array<AllowedAddressPair> | undefined);
    get allowedAddressPairs(): Array<AllowedAddressPair> | undefined;
    withExtraDhcpOpts(extraDhcpOpts: Array<ExtraDhcpOpt>): CreatePortOption;
    set extraDhcpOpts(extraDhcpOpts: Array<ExtraDhcpOpt> | undefined);
    get extraDhcpOpts(): Array<ExtraDhcpOpt> | undefined;
    withTenantId(tenantId: string): CreatePortOption;
    set tenantId(tenantId: string | undefined);
    get tenantId(): string | undefined;
}
