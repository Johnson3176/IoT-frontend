export declare class NeutronCreateSecurityGroupRuleOption {
    description?: string;
    direction: NeutronCreateSecurityGroupRuleOptionDirectionEnum;
    ethertype?: NeutronCreateSecurityGroupRuleOptionEthertypeEnum;
    private 'port_range_max'?;
    private 'port_range_min'?;
    protocol?: string;
    private 'remote_group_id'?;
    private 'remote_ip_prefix'?;
    private 'security_group_id';
    constructor(direction?: any, securityGroupId?: any);
    withDescription(description: string): NeutronCreateSecurityGroupRuleOption;
    withDirection(direction: NeutronCreateSecurityGroupRuleOptionDirectionEnum): NeutronCreateSecurityGroupRuleOption;
    withEthertype(ethertype: NeutronCreateSecurityGroupRuleOptionEthertypeEnum): NeutronCreateSecurityGroupRuleOption;
    withPortRangeMax(portRangeMax: number): NeutronCreateSecurityGroupRuleOption;
    set portRangeMax(portRangeMax: number | undefined);
    get portRangeMax(): number | undefined;
    withPortRangeMin(portRangeMin: number): NeutronCreateSecurityGroupRuleOption;
    set portRangeMin(portRangeMin: number | undefined);
    get portRangeMin(): number | undefined;
    withProtocol(protocol: string): NeutronCreateSecurityGroupRuleOption;
    withRemoteGroupId(remoteGroupId: string): NeutronCreateSecurityGroupRuleOption;
    set remoteGroupId(remoteGroupId: string | undefined);
    get remoteGroupId(): string | undefined;
    withRemoteIpPrefix(remoteIpPrefix: string): NeutronCreateSecurityGroupRuleOption;
    set remoteIpPrefix(remoteIpPrefix: string | undefined);
    get remoteIpPrefix(): string | undefined;
    withSecurityGroupId(securityGroupId: string): NeutronCreateSecurityGroupRuleOption;
    set securityGroupId(securityGroupId: string | undefined);
    get securityGroupId(): string | undefined;
}
/**
    * @export
    * @enum {string}
    */
export declare enum NeutronCreateSecurityGroupRuleOptionDirectionEnum {
    INGRESS = "ingress",
    EGRESS = "egress"
}
/**
    * @export
    * @enum {string}
    */
export declare enum NeutronCreateSecurityGroupRuleOptionEthertypeEnum {
    IPV4 = "IPv4",
    IPV6 = "IPv6"
}
