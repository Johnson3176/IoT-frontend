"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AcceptVpcPeeringResponseStatusEnum = exports.AcceptVpcPeeringResponse = void 0;
var SdkResponse_1 = require("@huaweicloud/huaweicloud-sdk-core/SdkResponse");
var AcceptVpcPeeringResponse = /** @class */ (function (_super) {
    __extends(AcceptVpcPeeringResponse, _super);
    function AcceptVpcPeeringResponse() {
        return _super.call(this) || this;
    }
    AcceptVpcPeeringResponse.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    AcceptVpcPeeringResponse.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    AcceptVpcPeeringResponse.prototype.withStatus = function (status) {
        this['status'] = status;
        return this;
    };
    AcceptVpcPeeringResponse.prototype.withRequestVpcInfo = function (requestVpcInfo) {
        this['request_vpc_info'] = requestVpcInfo;
        return this;
    };
    Object.defineProperty(AcceptVpcPeeringResponse.prototype, "requestVpcInfo", {
        get: function () {
            return this['request_vpc_info'];
        },
        set: function (requestVpcInfo) {
            this['request_vpc_info'] = requestVpcInfo;
        },
        enumerable: false,
        configurable: true
    });
    AcceptVpcPeeringResponse.prototype.withAcceptVpcInfo = function (acceptVpcInfo) {
        this['accept_vpc_info'] = acceptVpcInfo;
        return this;
    };
    Object.defineProperty(AcceptVpcPeeringResponse.prototype, "acceptVpcInfo", {
        get: function () {
            return this['accept_vpc_info'];
        },
        set: function (acceptVpcInfo) {
            this['accept_vpc_info'] = acceptVpcInfo;
        },
        enumerable: false,
        configurable: true
    });
    AcceptVpcPeeringResponse.prototype.withCreatedAt = function (createdAt) {
        this['created_at'] = createdAt;
        return this;
    };
    Object.defineProperty(AcceptVpcPeeringResponse.prototype, "createdAt", {
        get: function () {
            return this['created_at'];
        },
        set: function (createdAt) {
            this['created_at'] = createdAt;
        },
        enumerable: false,
        configurable: true
    });
    AcceptVpcPeeringResponse.prototype.withUpdatedAt = function (updatedAt) {
        this['updated_at'] = updatedAt;
        return this;
    };
    Object.defineProperty(AcceptVpcPeeringResponse.prototype, "updatedAt", {
        get: function () {
            return this['updated_at'];
        },
        set: function (updatedAt) {
            this['updated_at'] = updatedAt;
        },
        enumerable: false,
        configurable: true
    });
    AcceptVpcPeeringResponse.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    return AcceptVpcPeeringResponse;
}(SdkResponse_1.SdkResponse));
exports.AcceptVpcPeeringResponse = AcceptVpcPeeringResponse;
/**
    * @export
    * @enum {string}
    */
var AcceptVpcPeeringResponseStatusEnum;
(function (AcceptVpcPeeringResponseStatusEnum) {
    AcceptVpcPeeringResponseStatusEnum["PENDING_ACCEPTANCE"] = "PENDING_ACCEPTANCE";
    AcceptVpcPeeringResponseStatusEnum["REJECTED"] = "REJECTED";
    AcceptVpcPeeringResponseStatusEnum["EXPIRED"] = "EXPIRED";
    AcceptVpcPeeringResponseStatusEnum["DELETED"] = "DELETED";
    AcceptVpcPeeringResponseStatusEnum["ACTIVE"] = "ACTIVE";
})(AcceptVpcPeeringResponseStatusEnum = exports.AcceptVpcPeeringResponseStatusEnum || (exports.AcceptVpcPeeringResponseStatusEnum = {}));
