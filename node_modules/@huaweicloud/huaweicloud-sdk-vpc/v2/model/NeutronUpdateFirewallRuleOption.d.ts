export declare class NeutronUpdateFirewallRuleOption {
    action?: NeutronUpdateFirewallRuleOptionActionEnum;
    description?: string;
    private 'destination_ip_address'?;
    private 'destination_port'?;
    enabled?: boolean;
    private 'ip_version'?;
    name?: string;
    protocol?: string;
    private 'source_ip_address'?;
    private 'source_port'?;
    constructor();
    withAction(action: NeutronUpdateFirewallRuleOptionActionEnum): NeutronUpdateFirewallRuleOption;
    withDescription(description: string): NeutronUpdateFirewallRuleOption;
    withDestinationIpAddress(destinationIpAddress: string): NeutronUpdateFirewallRuleOption;
    set destinationIpAddress(destinationIpAddress: string | undefined);
    get destinationIpAddress(): string | undefined;
    withDestinationPort(destinationPort: string): NeutronUpdateFirewallRuleOption;
    set destinationPort(destinationPort: string | undefined);
    get destinationPort(): string | undefined;
    withEnabled(enabled: boolean): NeutronUpdateFirewallRuleOption;
    withIpVersion(ipVersion: number): NeutronUpdateFirewallRuleOption;
    set ipVersion(ipVersion: number | undefined);
    get ipVersion(): number | undefined;
    withName(name: string): NeutronUpdateFirewallRuleOption;
    withProtocol(protocol: string): NeutronUpdateFirewallRuleOption;
    withSourceIpAddress(sourceIpAddress: string): NeutronUpdateFirewallRuleOption;
    set sourceIpAddress(sourceIpAddress: string | undefined);
    get sourceIpAddress(): string | undefined;
    withSourcePort(sourcePort: string): NeutronUpdateFirewallRuleOption;
    set sourcePort(sourcePort: string | undefined);
    get sourcePort(): string | undefined;
}
/**
    * @export
    * @enum {string}
    */
export declare enum NeutronUpdateFirewallRuleOptionActionEnum {
    DENY = "DENY",
    ALLOW = "ALLOW"
}
