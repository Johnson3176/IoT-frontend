import { RouteTableRoute } from './RouteTableRoute';
import { SubnetList } from './SubnetList';
export declare class RouteTableResp {
    id: string;
    name: string;
    private 'default';
    routes: Array<RouteTableRoute>;
    subnets: Array<SubnetList>;
    private 'tenant_id';
    private 'vpc_id';
    description: string;
    private 'created_at';
    private 'updated_at';
    constructor(id?: any, name?: any, _default?: any, routes?: any, subnets?: any, tenantId?: any, vpcId?: any, description?: any, createdAt?: any, updatedAt?: any);
    withId(id: string): RouteTableResp;
    withName(name: string): RouteTableResp;
    withDefault(_default: boolean): RouteTableResp;
    set _default(_default: boolean | undefined);
    get _default(): boolean | undefined;
    withRoutes(routes: Array<RouteTableRoute>): RouteTableResp;
    withSubnets(subnets: Array<SubnetList>): RouteTableResp;
    withTenantId(tenantId: string): RouteTableResp;
    set tenantId(tenantId: string | undefined);
    get tenantId(): string | undefined;
    withVpcId(vpcId: string): RouteTableResp;
    set vpcId(vpcId: string | undefined);
    get vpcId(): string | undefined;
    withDescription(description: string): RouteTableResp;
    withCreatedAt(createdAt: Date): RouteTableResp;
    set createdAt(createdAt: Date | undefined);
    get createdAt(): Date | undefined;
    withUpdatedAt(updatedAt: Date): RouteTableResp;
    set updatedAt(updatedAt: Date | undefined);
    get updatedAt(): Date | undefined;
}
