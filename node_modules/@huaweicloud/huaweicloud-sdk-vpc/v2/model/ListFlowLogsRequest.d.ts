export declare class ListFlowLogsRequest {
    id?: string;
    name?: string;
    private 'tenant_id'?;
    description?: string;
    private 'resource_type'?;
    private 'resource_id'?;
    private 'traffic_type'?;
    private 'log_group_id'?;
    private 'log_topic_id'?;
    private 'log_store_type'?;
    status?: ListFlowLogsRequestStatusEnum;
    limit?: string;
    marker?: string;
    constructor();
    withId(id: string): ListFlowLogsRequest;
    withName(name: string): ListFlowLogsRequest;
    withTenantId(tenantId: string): ListFlowLogsRequest;
    set tenantId(tenantId: string | undefined);
    get tenantId(): string | undefined;
    withDescription(description: string): ListFlowLogsRequest;
    withResourceType(resourceType: ListFlowLogsRequestResourceTypeEnum): ListFlowLogsRequest;
    set resourceType(resourceType: ListFlowLogsRequestResourceTypeEnum | undefined);
    get resourceType(): ListFlowLogsRequestResourceTypeEnum | undefined;
    withResourceId(resourceId: string): ListFlowLogsRequest;
    set resourceId(resourceId: string | undefined);
    get resourceId(): string | undefined;
    withTrafficType(trafficType: ListFlowLogsRequestTrafficTypeEnum): ListFlowLogsRequest;
    set trafficType(trafficType: ListFlowLogsRequestTrafficTypeEnum | undefined);
    get trafficType(): ListFlowLogsRequestTrafficTypeEnum | undefined;
    withLogGroupId(logGroupId: string): ListFlowLogsRequest;
    set logGroupId(logGroupId: string | undefined);
    get logGroupId(): string | undefined;
    withLogTopicId(logTopicId: string): ListFlowLogsRequest;
    set logTopicId(logTopicId: string | undefined);
    get logTopicId(): string | undefined;
    withLogStoreType(logStoreType: ListFlowLogsRequestLogStoreTypeEnum): ListFlowLogsRequest;
    set logStoreType(logStoreType: ListFlowLogsRequestLogStoreTypeEnum | undefined);
    get logStoreType(): ListFlowLogsRequestLogStoreTypeEnum | undefined;
    withStatus(status: ListFlowLogsRequestStatusEnum): ListFlowLogsRequest;
    withLimit(limit: string): ListFlowLogsRequest;
    withMarker(marker: string): ListFlowLogsRequest;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListFlowLogsRequestResourceTypeEnum {
    PORT = "port",
    NETWORK = "network",
    VPC = "vpc"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListFlowLogsRequestTrafficTypeEnum {
    ALL = "all",
    REJECT = "reject",
    ACCEPT = "accept"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListFlowLogsRequestLogStoreTypeEnum {
    LTS = "lts"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListFlowLogsRequestStatusEnum {
    ACTIVE = "ACTIVE",
    DOWN = "DOWN",
    ERROR = "ERROR"
}
