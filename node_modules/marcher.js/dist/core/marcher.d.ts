import type { SDFMapFunction } from "../components/mapFunction";
import type { SDFMaterial } from "../components/material";
import { SDFRender } from "../components";
import { SDFMainImage } from "../components";
import { GroupSDF } from "../primitives/group";
export interface MarcherConfig {
    antialias: boolean;
    skybox: string;
    showIsoline: boolean;
}
declare class Marcher {
    utilFunction: string;
    mapFunction: SDFMapFunction | null;
    material: SDFMaterial | null;
    lighting: string | null;
    raycast: string | null;
    calcNormal: string | null;
    render: SDFRender;
    getSceneColor: string | null;
    mainImage: SDFMainImage | null;
    groups: GroupSDF[];
    showIsoline: boolean;
    constructor(config?: Partial<MarcherConfig>);
    setUtilFunction(str: string): this;
    setMapFunction(mapFunction: SDFMapFunction): this;
    setMaterial(material: SDFMaterial): this;
    setLighting(lighting: string): this;
    setRaycast(raycast: string): this;
    setCalcNormal(calcNormal: string): this;
    setGetSceneColor(getSceneColor: string): this;
    addGroup(group: GroupSDF): this;
    enableOrbitControls(): this;
    enableBeautifulLighting(): this;
    get shaderSDFUtils(): string;
    get shaderMapFunction(): string;
    get shaderRaycast(): string;
    get shaderNormal(): string;
    get shaderMaterial(): string;
    get shaderLighting(): string;
    get shaderRender(): string;
    get shaderGetSceneColor(): string;
    get shaderMainImage(): string;
    get shaderGroupFunctionsArray(): string[];
    get shaderGroupFunctions(): string;
    get shaderGroupFunctionsReverse(): string;
    get shaderIsolineDefine(): string;
    get totalShaderArray(): string[];
    get fragmentShader(): string;
}
export { Marcher };
